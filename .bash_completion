# -*- shell-script -*-

# DEFINITIONS
_foo() 
{
    # Tiny sample of bash_completion. Enable debug echo.
    local cur prev opts
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="--help --verbose --version"
    echo ""
    echo "> cur=$cur prev=$prev COMP_CWORD=$COMP_CWORD"
    echo "> opts=$opts"
    echo "> COMPWORDS=${COMP_WORDS[*]}"

    if [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi
}
complete -F _foo foo
foo()
{
    # sample function by OGATA Tetsuji
    case $1 in
        --help) echo "$FUNCNAME [--help --verbose --version]" ;;
        --verbose) echo "Hello! Hello! Hello!" ;;
        --version) echo "$FUNCNAME Version 0.1" ;;
        *) echo foo ;;
    esac
}

type cdj >/dev/null 2>&1 &&
_cdj()
{
    local cur prev opts i
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts=$(for i in $(seq 0 2 $((${#CDJ_DIR_MAP[*]}-2)) ) ; do echo ${CDJ_DIR_MAP[$i]} ; done ; echo "-h -v -l")
    opts=${opts% }
    #echo ""
    #echo "> cur=$cur prev=$prev COMP_CWORD=$COMP_CWORD"
    #echo "> opts=$opts"
    #echo "> COMPWORDS=${COMP_WORDS[*]}"

    case ${prev} in
        -l)
            opts=$(for i in $(seq 0 2 $((${#CDJ_DIR_MAP[*]}-2)) ) ; do echo ${CDJ_DIR_MAP[$i]} ; done)
            COMPREPLY=( $(compgen -W "$opts" -- ${cur} ))
            ;;
        *)
            ;;
    esac

    COMPREPLY=( $(compgen -W "$opts" -- ${cur} ))
    return 0
} &&
complete -F _cdj cdj
